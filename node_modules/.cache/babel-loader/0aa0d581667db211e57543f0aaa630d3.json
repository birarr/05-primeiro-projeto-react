{"ast":null,"code":"var _jsxFileName = \"/home/ubiratan/Bira/Gostack2/05-primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport api from '../../services/api';\nimport logoImg from \"../../assets/logo.svg\";\nimport { Title, Form, Repositories, Error } from './styles';\n\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {\n    localStorage.setItem('@GithubExplorer:repositories', JSON.stringify(repositories));\n  }, [repositories]);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite autor/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busco por este repositório');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImg,\n    alt: \"Github Explorer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, \"Explore reposit\\xF3rios no Github\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \"Pesquisar\")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, repository.full_name), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, repository.description)), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/ubiratan/Bira/Gostack2/05-primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","api","Title","Form","Repositories","Error","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","localStorage","setItem","JSON","stringify","handleAddRepository","event","preventDefault","response","get","repository","data","err","logoImg","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, FormEvent } from 'react';\nimport {FiChevronRight} from 'react-icons/fi';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  }\n}\n\nconst Dashboard: React.FC = () => {\nconst [newRepo, setNewRepo]  = useState('');\nconst [inputError, setInputError] = useState('');\nconst [repositories, setRepositories] = useState<Repository[]>([]);\n\nuseEffect(() => {\n  localStorage.setItem(\n    '@GithubExplorer:repositories',\n    JSON.stringify(repositories),\n  );\n}, [repositories]);\n\nasync function handleAddRepository(event: FormEvent<HTMLFormElement>): Promise<void> {\n  event.preventDefault();\n  \n  if(!newRepo) {\n    setInputError('Digite autor/nome do repositório');\n    return;\n  }\n  \n  try {\n  const response = await api.get<Repository>(`repos/${newRepo}`);\n\n  const repository = response.data;\n\n  setRepositories([...repositories, repository]);\n  setNewRepo('');\n  setInputError('');\n  } catch (err){\n    setInputError('Erro na busco por este repositório');\n\n  }\n}\n\n  return (\n    <>\n  <img src={logoImg} alt=\"Github Explorer\"/>\n  <Title>\n    Explore repositórios no Github\n    </Title>\n\n    <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n      <input\n      value = {newRepo}\n      onChange={e => setNewRepo(e.target.value)}\n      placeholder=\"Digite o nome do repositório\"/>\n      <button type=\"submit\">Pesquisar</button>\n    </Form>\n\n    { inputError && <Error>{inputError}</Error> }\n\n    <Repositories>\n      {repositories.map(repository => (\n        <a key={repository.full_name} href=\"\">\n        <img src={repository.owner.avatar_url} alt={repository.owner.login}/>\n        <div>\n          <strong>{repository.full_name}</strong>\n          <p>{repository.description}</p>\n        </div>\n        <FiChevronRight size={20}/>\n      </a>\n      ))}\n    </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}